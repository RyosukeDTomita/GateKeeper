worker_processes  1;

error_log logs/error.log info;

env TZ=Asia/Tokyo;

events {
    worker_connections 1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # access_log用のFormat
    log_format main 'Time: $time_iso8601,'
                    'IP: $remote_addr,'
                    'X-FOWARDED-FOR: $http_x_forwarded_for,'
                    'URI: $request_uri,'
                    'METHOD: $request_method,'
                    'Return Status: $status,';
    access_log logs/access.log  main;

    # eventログ用のFormat
    log_format event 'Time: $time_iso8601,'
                    'IP: $remote_addr,'
                    'X-FOWARDED-FOR: $http_x_forwarded_for",'
                    'URI: $request_uri,'
                    'HOST: $host,'
                    'COOKIE: $http_cookie,'
                    'BODY Bytes Sent: $body_bytes_sent,'
                    'REQUEST: $request,'
                    'RETURN STATUS: $status,';
    access_log logs/event.log event;

    keepalive_timeout  60;

    # NOTE: .luaで終わらないパスを書くとエラーになる。
    # nginx: [alert] failed to load the 'resty.core' module (https://github.com/openresty/lua-resty-core); ensure you are using an OpenResty release from https://openresty.org/en/download.html (reason: error loading module 'resty.core' from file '/usr/local/openresty':
    lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/openresty/luajit/libs/?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/jit/?.lua;/usr/local/openresty/reverse_proxy/src/?.lua;/usr/local/openresty/lualib/resty/?.lua;/usr/local/openresty/lualib/ngx/?.lua;/usr/local/openresty/?.lua;/usr/local/openresty/lua54/share/lua/5.4/?.lua;;";
    lua_package_cpath "/usr/local/openresty/luajit/lib/libluajit-5.1/?.so;;";

    # https://dev.classmethod.jp/articles/docker-service-discovery/によるとDockerコンテナで使用されるネームサーバは127.0.0.11なのでこちらを指定
    resolver 127.0.0.11 ipv6=off;

    # # NOTE: upstream名にはHTTPのHostヘッダに入れたいFQDNを指定するのが良さそう。ロードバランシングする意味はないのでコメントアウト
    # upstream abehiroshi.la.coocan.jp {
    #     server abehiroshi.la.coocan.jp:80; # テスト用
    #     # server example.com:443;
    #     # balancer_by_lua_file /usr/local/openresty/reverse_proxy/src/balancer.lua;
    #     keepalive 32;
    #     keepalive_requests 100;
    #     keepalive_timeout 10s;
    # }

    server {
        listen [::]:80 ipv6only=off;  # IPv4の80番ポートでListen
        server_name localhost;
        server_tokens off; # エラーページにnginxのバージョンを表示しない

        # templateモジュールからrenderするhtmlのパス
        set $template_root "/usr/local/openresty/reverse_proxy/html";

        # IPアドレス制限の際に転送前のhostを知るのに使う
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


        location / {
            root /usr/local/openresty/reverse_proxy/html;
            default_type 'text/html';

            # OpenResty経由でアクセスしていることを確認するためにつけている(デバック用)
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Connection "";

            access_by_lua_file /usr/local/openresty/reverse_proxy/src/main.lua;

            # NOTE: main.luaでRedisから転送先とその認証タイプを選択して認証後にproxy_passにリクエストを転送するため，proxy_passを直接指定していない
            set $pass ""; # luaで書き換える変数
            proxy_pass $pass;

            # Digest認証のnonce作成のために作成
            set $secret_data "ZGMF-X42S";

            # キャッシュを無効にするためのヘッダーを設定
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Pragma "no-cache";
            expires off;
        }

        # 認証選択画面
        location = /index.html {
            root /usr/local/openresty/reverse_proxy/html;
            default_type 'text/html';
        }

        # ヘルスチェック用
        location = /status {
            default_type 'text/html';
            echo "OK";
        }

        # アイコンのパスを設定することで404にならないようにしつつ，loggingしない
        location = /favicon.ico {
            root /usr/local/openresty/reverse_proxy/html;
            default_type 'image/x-icon';
            access_log off;
        }

        error_page 500 502 503 504 /50x.html;
        location = /usr/local/openresty/reverse_proxy/nginx/html/50x.html {
            root html;
        }
    }
}
